// Generated by view binder compiler. Do not edit!
package com.myapp.moneytracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toolbar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.myapp.moneytracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTransactionBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextView DescTextView;

  @NonNull
  public final ImageView noDataImage;

  @NonNull
  public final CardView pullIcon;

  @NonNull
  public final RecyclerView rvTransaction;

  @NonNull
  public final ShimmerFrameLayout shimmerFrameLayout;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final Spinner timeSpanSpinner;

  @NonNull
  public final Toolbar topBarLinear;

  @NonNull
  public final TextView tvNoData;

  @NonNull
  public final TextView tvNoDataTitle;

  @NonNull
  public final ImageView typeIcon;

  @NonNull
  public final Spinner typeSpinner;

  @NonNull
  public final RelativeLayout up;

  @NonNull
  public final TextView userNameTV;

  @NonNull
  public final TextView visibilityNoData;

  private FragmentTransactionBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextView DescTextView, @NonNull ImageView noDataImage, @NonNull CardView pullIcon,
      @NonNull RecyclerView rvTransaction, @NonNull ShimmerFrameLayout shimmerFrameLayout,
      @NonNull SwipeRefreshLayout swipeRefresh, @NonNull Spinner timeSpanSpinner,
      @NonNull Toolbar topBarLinear, @NonNull TextView tvNoData, @NonNull TextView tvNoDataTitle,
      @NonNull ImageView typeIcon, @NonNull Spinner typeSpinner, @NonNull RelativeLayout up,
      @NonNull TextView userNameTV, @NonNull TextView visibilityNoData) {
    this.rootView = rootView;
    this.DescTextView = DescTextView;
    this.noDataImage = noDataImage;
    this.pullIcon = pullIcon;
    this.rvTransaction = rvTransaction;
    this.shimmerFrameLayout = shimmerFrameLayout;
    this.swipeRefresh = swipeRefresh;
    this.timeSpanSpinner = timeSpanSpinner;
    this.topBarLinear = topBarLinear;
    this.tvNoData = tvNoData;
    this.tvNoDataTitle = tvNoDataTitle;
    this.typeIcon = typeIcon;
    this.typeSpinner = typeSpinner;
    this.up = up;
    this.userNameTV = userNameTV;
    this.visibilityNoData = visibilityNoData;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DescTextView;
      TextView DescTextView = ViewBindings.findChildViewById(rootView, id);
      if (DescTextView == null) {
        break missingId;
      }

      id = R.id.noDataImage;
      ImageView noDataImage = ViewBindings.findChildViewById(rootView, id);
      if (noDataImage == null) {
        break missingId;
      }

      id = R.id.pullIcon;
      CardView pullIcon = ViewBindings.findChildViewById(rootView, id);
      if (pullIcon == null) {
        break missingId;
      }

      id = R.id.rvTransaction;
      RecyclerView rvTransaction = ViewBindings.findChildViewById(rootView, id);
      if (rvTransaction == null) {
        break missingId;
      }

      id = R.id.shimmerFrameLayout;
      ShimmerFrameLayout shimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (shimmerFrameLayout == null) {
        break missingId;
      }

      id = R.id.swipeRefresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.timeSpanSpinner;
      Spinner timeSpanSpinner = ViewBindings.findChildViewById(rootView, id);
      if (timeSpanSpinner == null) {
        break missingId;
      }

      id = R.id.topBarLinear;
      Toolbar topBarLinear = ViewBindings.findChildViewById(rootView, id);
      if (topBarLinear == null) {
        break missingId;
      }

      id = R.id.tvNoData;
      TextView tvNoData = ViewBindings.findChildViewById(rootView, id);
      if (tvNoData == null) {
        break missingId;
      }

      id = R.id.tvNoDataTitle;
      TextView tvNoDataTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvNoDataTitle == null) {
        break missingId;
      }

      id = R.id.typeIcon;
      ImageView typeIcon = ViewBindings.findChildViewById(rootView, id);
      if (typeIcon == null) {
        break missingId;
      }

      id = R.id.typeSpinner;
      Spinner typeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (typeSpinner == null) {
        break missingId;
      }

      id = R.id.up;
      RelativeLayout up = ViewBindings.findChildViewById(rootView, id);
      if (up == null) {
        break missingId;
      }

      id = R.id.userNameTV;
      TextView userNameTV = ViewBindings.findChildViewById(rootView, id);
      if (userNameTV == null) {
        break missingId;
      }

      id = R.id.visibilityNoData;
      TextView visibilityNoData = ViewBindings.findChildViewById(rootView, id);
      if (visibilityNoData == null) {
        break missingId;
      }

      return new FragmentTransactionBinding((CoordinatorLayout) rootView, DescTextView, noDataImage,
          pullIcon, rvTransaction, shimmerFrameLayout, swipeRefresh, timeSpanSpinner, topBarLinear,
          tvNoData, tvNoDataTitle, typeIcon, typeSpinner, up, userNameTV, visibilityNoData);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
